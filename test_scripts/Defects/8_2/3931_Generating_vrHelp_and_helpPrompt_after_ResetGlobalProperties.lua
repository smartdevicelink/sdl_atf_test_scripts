---------------------------------------------------------------------------------------------------
-- Issue: https://github.com/smartdevicelink/sdl_core/issues/3931
---------------------------------------------------------------------------------------------------
-- Description:
-- Test script to check that UI.SetGlobalProperties and TTS.SetGlobalProperties requests are generated by SDL
-- for AddCommand request sent after ResetGlobalProperties
--
-- Preconditions:
-- 1) SDL, HMI, Mobile session are started
-- 2) Mobile app is registered
-- 3) Application is activated
-- 4) App sends AddCommand with menuName and vrCommands
-- SDL does:
--  a. Send UI.AddCommand to the HMI with menuParams
--  b. Send VR.AddCommand to the HMI with vrCommands
--  c. Send TTS.SetGlobalProperties to the HMI with helpPrompt
--  d. Send UI.SetGlobalProperties to the HMI with vrHelp and vrHelpTitle
-- 5) App sends SetGlobalProperties with helpPrompt, vrHelp and verHelpTitle
-- SDL does:
--  a. Send TTS.SetGlobalProperties to the HMI with helpPrompt
--  b. Send UI.SetGlobalProperties to the HMI with vrHelp and vrHelpTitle
-- 6) App sends ResetGlobalProperties with properties: {"VRHELPTITLE", "VRHELPITEMS", "HELPPROMPT"}
-- SDL does:
--  a. Send TTS.SetGlobalProperties to the HMI with helpPrompt
--  b. Send UI.SetGlobalProperties to the HMI with vrHelp and vrHelpTitle
--
-- Steps:
-- 1) App sends AddCommand with menuName and vrCommands
-- SDL does:
--  a. Send UI.AddCommand to the HMI with menuParams
--  b. Send VR.AddCommand to the HMI with vrCommands
--  c. Send TTS.SetGlobalProperties to the HMI with helpPrompt
--  d. Send UI.SetGlobalProperties to the HMI with vrHelp and vrHelpTitle
---------------------------------------------------------------------------------------------------
--[[ Required Shared libraries ]]
local runner = require('user_modules/script_runner')
local common = require('user_modules/sequences/actions')

--[[ Test Configuration ]]
runner.testSettings.isSelfIncluded = false

--[[ Local Variables ]]

local addCommandParams = {
  [1] = {cmdID = 1, menuParams = {menuName = "Menu name"}, vrCommands = {"vr 1", "vr 2"} },
  [2] = {cmdID = 10, menuParams = {menuName = "Second Menu name"}, vrCommands = {"VR Command 1", "VR Command 2", "VR Command 3"}}
}

local generatedGlobalProperties = {
  vrHelp = {},
  helpPrompt = {}
}

local setGlobalPropertiesParams = {
  helpPrompt = { {text = "Prompt", type = "TEXT"} },
  vrHelpTitle = "Help title",
  vrHelp = { 
    {text = "Help item 1", position = 1},
    {text = "Help item 2", position = 2}
  }
}

local resetParams = { 
  properties = {"VRHELPTITLE", "VRHELPITEMS", "HELPPROMPT"}
}

local defaultGlobalProperties = {
  vrHelp = {
    {position = 1, text = "Test Application"},
    {position = 2, text = "vr 1"}
  },
  vrHelpTitle = "Available Vr Commands List",
  helpPrompt = {
    {text = "Please speak one of the following commands,", type = "TEXT"},
    {text = "Please say a command,", type = "TEXT"}
  } 
}

--[[ Local Functions ]]
local function AddCommand(pParams)
  local cid = common.getMobileSession():SendRPC("AddCommand", pParams)
  common.getHMIConnection():ExpectRequest("UI.AddCommand", {
    cmdID = pParams.cmdID,
    menuParams = pParams.menuParams
  })
  :Do(function(_, data)
    common.getHMIConnection():SendResponse(data.id, data.method, "SUCCESS", {})
  end)
  common.getHMIConnection():ExpectRequest("VR.AddCommand", {
    cmdID = pParams.cmdID,
    vrCommands = pParams.vrCommands
  })
  :Do(function(_, data)
    common.getHMIConnection():SendResponse(data.id, data.method, "SUCCESS", {})
  end)

  table.insert(generatedGlobalProperties.vrHelp, { position = (#generatedGlobalProperties.vrHelp + 1), text = pParams.vrCommands[1] })
  table.insert(generatedGlobalProperties.helpPrompt, { text = pParams.vrCommands[1], type = "TEXT" })
  common.getHMIConnection():ExpectRequest("UI.SetGlobalProperties", {
    vrHelp = generatedGlobalProperties.vrHelp
  })
  :Do(function(_, data)
    common.getHMIConnection():SendResponse(data.id, data.method, "SUCCESS", {})
  end)
  common.getHMIConnection():ExpectRequest("TTS.SetGlobalProperties", {
    helpPrompt = generatedGlobalProperties.helpPrompt
  })
  :Do(function(_, data)
    common.getHMIConnection():SendResponse(data.id, data.method, "SUCCESS", {})
  end)

  common.getMobileSession():ExpectResponse(cid, { success = true, resultCode = "SUCCESS" })
end

local function SetGlobalProperties(pParams)
  local cid = common.getMobileSession():SendRPC("SetGlobalProperties", pParams)
  common.getHMIConnection():ExpectRequest("UI.SetGlobalProperties", {
    vrHelp = pParams.vrHelp,
    vrHelpTitle = pParams.vrHelpTitle
  })
  :Do(function(_, data)
    common.getHMIConnection():SendResponse(data.id, data.method, "SUCCESS", {})
  end)
  common.getHMIConnection():ExpectRequest("TTS.SetGlobalProperties", {
    helpPrompt = pParams.helpPrompt
  })
  :Do(function(_, data)
    common.getHMIConnection():SendResponse(data.id, data.method, "SUCCESS", {})
  end)
  common.getMobileSession():ExpectResponse(cid, { success = true, resultCode = "SUCCESS" })

end

local function ResetGlobalProperties(pParams, defaultParams)
  local cid = common.getMobileSession():SendRPC("ResetGlobalProperties", pParams)
  common.getHMIConnection():ExpectRequest("UI.SetGlobalProperties", {
    vrHelp = generatedGlobalProperties.vrHelp
  })
  :Do(function(_, data)
    common.getHMIConnection():SendResponse(data.id, data.method, "SUCCESS", {})
  end)
  common.getHMIConnection():ExpectRequest("TTS.SetGlobalProperties", {
    helpPrompt = generatedGlobalProperties.helpPrompt
  })
  :Do(function(_, data)
    common.getHMIConnection():SendResponse(data.id, data.method, "SUCCESS", {})
  end)
  common.getMobileSession():ExpectResponse(cid, { success = true, resultCode = "SUCCESS" })
end


--[[ Scenario ]]
runner.Title("Preconditions")
runner.Step("Clean environment", common.preconditions)
runner.Step("Start SDL, HMI, connect Mobile, start Session", common.start)
runner.Step("Register App", common.registerApp)
runner.Step("Activate App", common.activateApp)
runner.Step("First AddCommand", AddCommand, { addCommandParams[1] })
runner.Step("SetGlobalProperties", SetGlobalProperties, { setGlobalPropertiesParams })
runner.Step("ResetGlobalProperties", ResetGlobalProperties, { resetParams, defaultGlobalProperties })

runner.Title("Test")
runner.Step("Second AddCommand", AddCommand, { addCommandParams[2] })

runner.Title("Postconditions")
runner.Step("Stop SDL", common.postconditions)
